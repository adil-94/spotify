{"version":3,"sources":["constants/spotify_constants.js","actions/spotify_actions.js","presentational-components/music_cards.jsx","presentational-components/playlist.jsx","container-components/spotify_main_container.jsx","App.jsx","reportWebVitals.js","selectors/selectors.js","sagas/spotify_saga.js","sagas/root_saga.js","reducers/spotify_reducer.js","reducers/root_reducer.js","store/spotify_store.js","index.js"],"names":["GET_ACCESS_TOKEN","SET_ACCESS_TOKEN","GET_PLAYLIST","SET_PLAYLIST","GET_ONMOUSE_FLAG","GET_LOCAL_SAVED_PLAYLIST","GET_DRAGGED_IDS","spotifyActions","getAccessToken","type","spotifyConstants","getFeaturedPlaylist","payload","getOnMouseFlag","getLocalSavedPlaylist","getDraggedIds","useStyles","makeStyles","theme","root","display","height","details","flexDirection","content","flex","cover","width","backgroundPosition","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","MusicCards","classes","useTheme","localSavedPlaylist","useSelector","state","spotifyReducer","Grid","container","map","music","item","lg","md","sm","xs","Card","className","CardContent","Typography","component","variant","primary","color","IconButton","aria-label","direction","CardMedia","style","backgroundImage","img","src","title","id","PlayList","dispatch","useDispatch","onMouseFlag","featuredPlaylist","getDraggedIDs","onDragEnd","result","index","source","localPlaylist","draggableId","push","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","isDraggingOver","isDragDisabled","includes","Tooltip","TransitionComponent","Zoom","placement","arrow","ListItem","ContainerComponent","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","background","ListItemIcon","Avatar","alt","ListItemText","secondary","ListItemSecondaryAction","placeholder","drawerWidth","flexGrow","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","padding","ResponsiveDrawer","props","window","React","useState","mobileOpen","setMobileOpen","noWrap","Box","p","Divider","aria-labelledby","subheader","ListSubheader","undefined","document","body","CssBaseline","AppBar","position","Toolbar","Button","size","startIcon","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","onMouseEnter","onMouseLeave","createMuiTheme","join","App","useEffect","accessToken","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAccessTokenActionDataWatcher","getFeaturedPlaylistActionDataWatcher","rootSaga","getAccessTokenActionrunOurAction","token","axios","post","qs","stringify","grant_type","headers","response","data","access_token","put","takeLatest","getFeaturedPlaylistActionrunOurAction","select","selectors","playlist","get","Authorization","playlists","items","list","description","substring","indexOf","length","split","name","images","url","all","spotifySaga","initialState","foo","bar","nested","veryDeep","action","newState","Object","assign","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","run","ReactDOM","render","Fragment","getElementById"],"mappings":"oQAAaA,EAAiB,mBACjBC,EAAiB,mBACjBC,EAAa,eACbC,EAAa,eACbC,EAAiB,mBACjBC,EAAyB,2BAEzBC,EAAgB,kBCgBdC,EArBsB,CACjCC,eAAgB,iBAAO,CACnBC,KAAMC,IAERC,oBAAqB,SAACC,GAAD,MAAc,CACjCH,KAAMC,EACNE,YAEFC,eAAgB,SAACD,GAAD,MAAc,CAC5BH,KAAMC,EACNE,YAEFE,sBAAuB,SAACF,GAAD,MAAc,CACnCH,KAAMC,EACNE,YAEFG,cAAe,SAACH,GAAD,MAAc,CAC3BH,KAAMC,EACNE,a,uRCXFI,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,OAAQ,QAEVC,QAAS,CACPF,QAAS,OACTG,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERC,MAAO,CACLC,MAAO,IACPC,mBAAoB,UAEtBC,SAAU,CACRT,QAAS,OACTU,WAAY,SACZC,YAAab,EAAMc,QAAQ,GAC3BC,cAAef,EAAMc,QAAQ,IAE/BE,SAAU,CACRb,OAAQ,GACRM,MAAO,QAII,SAASQ,IACtB,IAAMC,EAAUpB,IACVE,EAAQmB,cACRC,EAAqBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAeH,sBACvE,OACE,8BACE,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACX,QAAS,EAAzB,SACGM,EAAmBM,KAAI,SAAAC,GACtB,OACE,cAACH,EAAA,EAAD,CAAqBI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAApD,SACE,eAACC,EAAA,EAAD,CAAMC,UAAWhB,EAAQjB,KAAzB,UACE,sBAAKiC,UAAWhB,EAAQd,QAAxB,UACE,eAAC+B,EAAA,EAAD,CAAaD,UAAWhB,EAAQZ,QAAhC,UACE,cAAC8B,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACGX,EAAMY,UAET,cAACH,EAAA,EAAD,CAAYE,QAAQ,YAAYE,MAAM,gBAAtC,SACGb,EAAMnB,WAGX,sBAAK0B,UAAWhB,EAAQP,SAAxB,UACE,cAAC8B,EAAA,EAAD,CAAYC,aAAW,WAAvB,SACuB,QAApB1C,EAAM2C,UACL,cAAC,IAAD,IAEE,cAAC,IAAD,MAGN,cAACF,EAAA,EAAD,CAAYC,aAAW,aAAvB,SACE,cAAC,IAAD,CAAeR,UAAWhB,EAAQF,aAEpC,cAACyB,EAAA,EAAD,CAAYC,aAAW,OAAvB,SACuB,QAApB1C,EAAM2C,UACL,cAAC,IAAD,IAEE,cAAC,IAAD,YAKV,cAACC,EAAA,EAAD,CACEV,UAAWhB,EAAQV,MACnBqC,MAAO,CAAEC,gBAAgB,OAAD,OAASnB,EAAMoB,IAAf,MACxBC,IAAKrB,EAAMoB,IACXE,MAAM,oCAnCDtB,EAAMuB,W,uHCxBd,SAASC,KACtB,IAAMC,EAAWC,cACXC,EAAcjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAe+B,eAC1DlC,EAAqBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAeH,sBACjEmC,EAAmBlC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAegC,oBAC/DC,EAAgBnC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAeiC,iBAalE,OACE,8BACE,cAAC,IAAD,CAAiBC,UAbH,SAACC,GACjB,IAAIC,EAAQD,EAAOE,OAAOD,MACtBE,EAAa,YAAOzC,GAAqB0C,EAAW,YAAON,GAC3DF,IACFO,EAAcE,KAAKR,EAAiBI,IACpCG,EAAYC,KAAKL,EAAOI,aACxBV,EAAS/D,EAAeO,sBAAsBiE,IAC9CT,EAAS/D,EAAeQ,cAAciE,MAMtC,SACE,cAAC,IAAD,CAAWE,YAAY,YAAvB,SACG,SAACC,EAAUC,GAAX,OACC,cAACC,GAAA,EAAD,CAASC,QAASH,EAASI,SAA3B,SACE,eAACC,EAAA,EAAD,CAAMzB,OAAoBqB,EAASK,eA5BP,IA4B5B,UACGhB,EAAiB7B,KAAI,SAACE,EAAM+B,GAAP,OACpB,cAAC,IAAD,CAEEG,YAAalC,EAAKsB,GAClBsB,eAAgBhB,EAAciB,SAAS7C,EAAKsB,IAC5CS,MAAOA,EAJT,SAMG,SAACM,EAAUC,GAAX,OACC,cAACQ,EAAA,EAAD,CAASzB,MAAOO,EAAciB,SAAS7C,EAAKsB,IAAM,4BAA8B,wCAAyCyB,oBAAqBC,IAAMC,UAAU,MAAMC,OAAK,EAAzK,SACE,8BACE,eAACC,GAAA,EAAD,qCAAU7C,UAAU,iBAClB8C,mBAAmB,KACnBC,eAAgB,CAAEC,IAAKjB,EAASI,WAC5BJ,EAASkB,gBACTlB,EAASmB,iBAJf,IAKEvC,OArDNwC,EAsDQnB,EAASmB,WAtDLC,EAuDJrB,EAASkB,eAAetC,MAvDjC,YAAC,eAEjByC,GAECD,GAAc,CAChBE,WAAY,aA2CU,UAUE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAQC,IAAI,aAAa1C,IAAKpB,EAAKmB,QAErC,cAAC4C,GAAA,EAAD,CACEpD,QAASX,EAAKW,QACdqD,UAAWhE,EAAKgE,YAElB,cAACC,GAAA,EAAD,UACE,cAACpD,EAAA,EAAD,UACE,cAAC,KAAD,gBAnEX,IAAC4C,EAAYC,IAwCT1D,EAAKsB,OAoCbe,EAAS6B,wB,WCxEpBC,GAAc,IAEdjG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEb+C,MAAO,CACH+C,SAAU,GAEdC,OAAO,eACFjG,EAAMkG,YAAYC,GAAG,MAAQ,CAC1B1F,MAAOsF,GACPK,WAAY,IAGpBC,OAAO,eACFrG,EAAMkG,YAAYC,GAAG,MAAQ,CAC1B1F,MAAM,eAAD,OAAiBsF,GAAjB,OACLO,WAAYP,KAGpBQ,WAAW,aACPC,YAAaxG,EAAMc,QAAQ,IAC1Bd,EAAMkG,YAAYC,GAAG,MAAQ,CAC1BjG,QAAS,SAIjBuG,QAASzG,EAAM0G,OAAOD,QACtBE,YAAa,CACTlG,MAAOsF,IAEXzF,QAAS,CACL0F,SAAU,EACVY,QAAS5G,EAAMc,QAAQ,GACvBX,OAAQ,aAmHD0G,OA/Gf,SAA0BC,GAAQ,IACtBC,EAAWD,EAAXC,OACF7F,EAAUpB,KACVE,EAAQmB,cAHe,EAIO6F,IAAMC,UAAS,GAJtB,mBAItBC,EAJsB,KAIVC,EAJU,KAKvB/D,EAAWC,cAIX4C,EACF,gCACI,qBAAK/D,UAAWhB,EAAQuF,QAASvD,GAAG,cAApC,SACI,cAACd,EAAA,EAAD,CAAYE,QAAQ,KAAK8E,QAAM,EAAClF,UAAU,qBAA1C,SACI,eAACmF,EAAA,EAAD,CAAKnH,QAAQ,OAAOoH,EAAG,EAAvB,UACI,cAACD,EAAA,EAAD,CAAKC,EAAG,EAAGpF,UAAU,WAArB,SACI,qBAAKc,IAAI,uDAEb,cAACqE,EAAA,EAAD,CAAKC,EAAG,EAAGtB,SAAU,EAAG9D,UAAU,WAAlC,4BAMZ,cAACqF,EAAA,EAAD,IACA,cAACjD,EAAA,EAAD,CACIjC,UAAU,MACVmF,kBAAgB,wBAChBC,UACI,cAACC,EAAA,EAAD,CAAerF,UAAU,MAAMa,GAAG,wBAAlC,iCAKR,cAACC,GAAD,OAYF1B,OAAuBkG,IAAXZ,EAAuB,kBAAMA,IAASa,SAASC,WAAOF,EAExE,OACI,qBAAKzF,UAAWhB,EAAQjB,KAAxB,SACI,eAAC,IAAD,CAAiBwD,UAbP,aAaV,UACI,cAACqE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQ9F,UAAWhB,EAAQmF,OAAQ7D,MAAM,YAA1D,SACI,eAACyF,EAAA,EAAD,WACI,cAAC7F,EAAA,EAAD,CAAYE,QAAQ,KAAKJ,UAAWhB,EAAQ+B,MAA5C,yBAGA,8BACI,cAACiF,EAAA,EAAD,CACI5F,QAAQ,WACRJ,UAAU,gBACViG,KAAK,SACLC,UAAW,cAAC,IAAD,IAJf,yBAWZ,sBAAKlG,UAAWhB,EAAQ+E,OAAQvD,aAAW,kBAA3C,UACI,cAAC2F,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACI,cAACC,EAAA,EAAD,CACI/G,UAAWA,EACXa,QAAQ,YACRmG,OAA4B,QAApBzI,EAAM2C,UAAsB,QAAU,OAC9C+F,KAAMxB,EACNyB,QArEG,WACvBxB,GAAeD,IAqEKhG,QAAS,CACL0H,MAAO1H,EAAQyF,aAEnBkC,WAAY,CACRC,aAAa,GAVrB,SAaK7C,MAGT,cAACoC,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,MAA9B,SACI,cAACC,EAAA,EAAD,CACItH,QAAS,CACL0H,MAAO1H,EAAQyF,aAEnBrE,QAAQ,YACRoG,MAAI,EALR,SAOKzC,SAIb,uBAAM/C,GAAG,eAAehB,UAAWhB,EAAQZ,QAAS0I,aA3D3C,WACjB5F,EAAS/D,EAAeM,gBAAe,KA0DiDsJ,aAxDvE,WACjB7F,EAAS/D,EAAeM,gBAAe,KAuD/B,UACI,qBAAKuC,UAAWhB,EAAQuF,UACxB,cAACxF,EAAD,aCjJdjB,GAAQkJ,YACZ,CACE,WAAc,CACZ,WAAc,CACZ,wBACAC,KAAK,MAET,QAAW,CACT,KAAQ,OACR,OAAU,CACR,MAAS,OACT,MAAS,QAEX,WAAc,CACZ,MAAS,UACT,QAAW,WAEb,QAAW,CACT,MAAS,UACT,KAAQ,UACR,KAAQ,UACR,aAAgB,QAElB,UAAa,CACX,MAAS,UACT,KAAQ,UACR,KAAQ,UACR,aAAgB,QAElB,MAAS,CACP,MAAS,UACT,KAAQ,UACR,KAAQ,UACR,aAAgB,QAElB,KAAQ,CACN,QAAW,OACX,UAAa,OACb,SAAY,sBACZ,KAAQ,uBAEV,KAAQ,CACN,WAAc,CACZ,wBACAA,KAAK,SAmBAC,OAbf,WACE,IAAMhG,EAAWC,cAKjB,OAJAgG,qBAAU,WACRjG,EAAS/D,EAAeC,oBACvB,IACiB+B,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAAe+H,eAE9D,cAACC,EAAA,EAAD,CAAevJ,MAAOA,GAAtB,SACE,cAAC,GAAD,OCrDSwJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sECPDH,GAAc,SAAChI,GAAD,OAAWA,EAAMC,eAAe+H,a,aCwB/CW,I,aAkBAC,I,aAIeC,IAtCrBC,GAAgC,WAAG,SAAnCA,IAAmC,wEAErC,OADIC,EAAM,GAD2B,SAE/BC,KAAMC,KAAK,yCACjBC,KAAGC,UAAU,CACXC,WAAY,uBACV,CACFC,QAAS,CACP,eAAgB,oCAChB,cAAiB,oGAElBhB,MAAK,SAASiB,GACbP,EAAMO,EAASC,KAAKC,gBAXa,OAarC,OAbqC,SAa/BC,aAAI,CAAExL,KAAMR,EAAkBW,QAAS2K,IAbR,OAcrC,OAdqC,SAc/BU,aAAI,CAAExL,KAAMP,EAAcU,QAAS2K,IAdJ,oCAAnCD,MAgBJ,SAAUH,KAAV,kEACE,OADF,SACQe,aAAWlM,EAAkBsL,IADrC,wCAKA,IAAMa,GAAqC,WAAG,SAAxCA,EAAmDJ,GAAX,0EACxB,OADwB,SAClBK,aAAOC,IADW,OAG5C,OAFM7B,EADsC,OAEtC8B,EAAS,GAF6B,SAGtCd,KAAMe,IAAI,mFAAoF,CAAEV,QAAS,CAAEW,cAAc,UAAD,OAAYhC,MACzIK,MAAK,SAAAiB,GACFA,EAASC,KAAKU,UAAUC,MAAM9J,KAAI,SAAA+J,GAChC,IAAIjL,EAAMiL,EAAKC,YAAYC,UAAUF,EAAKC,YAAYE,QAAQ,SAAS,EAAEH,EAAKC,YAAYG,QAAQC,MAAM,KACtGV,EAASrH,KAAK,CAACb,GAAGuI,EAAKvI,GAAGX,QAAQkJ,EAAKM,KAAKhJ,IAAI0I,EAAKO,OAAO,GAAGC,IAAIzL,MAAMA,EAAM,GAAGA,EAAM,WAPpD,OAW5C,OAX4C,SAWtCuK,aAAI,CAAExL,KAAMN,EAAcS,QAAS0L,IAXG,oCAAxCH,MAaN,SAAUf,GAAqCW,GAA/C,kEACE,OADF,SACQG,aAAWhM,EAAciM,IADjC,wCAIe,SAAUd,KAAV,kEACb,OADa,SACP+B,aAAI,CAACjC,KAAkCC,OADhC,wC,iBC3CPC,IAAV,SAAUA,KAAV,kEACE,OADF,SACQ+B,aAAI,CAACC,OADb,wCAIehC,U,6BCLTiC,GAAe,CACjB9C,YAAY,GACZ/F,iBAAiB,GACjBD,aAAY,EACZlC,mBAAmB,GACnBoC,cAAc,GACd6I,IAAK,CACHC,IAAK,MACLC,OAAQ,CACNC,UAAU,KAgCHjL,GA5BQ,WAAmC,IAAlCD,EAAiC,uDAAzB8K,GAAcK,EAAW,uCAC/CC,EAAWC,OAAOC,OAAO,GAAItL,GACnC,OAAQmL,EAAOlN,MAEX,KAAKC,EAEP,OADEkN,EAASpD,YAAcmD,EAAO/M,QACzBgN,EAEP,KAAKlN,EAEL,OADEkN,EAASnJ,iBAAmBkJ,EAAO/M,QAC9BgN,EAEP,KAAKlN,EAEL,OADEkN,EAASpJ,YAAcmJ,EAAO/M,QACzBgN,EAEP,KAAKlN,EAEL,OADEkN,EAAStL,mBAAqBqL,EAAO/M,QAChCgN,EAEP,KAAKlN,EAEL,OADEkN,EAASlJ,cAAgBiJ,EAAO/M,QAC3BgN,EAEP,QACA,OAAOpL,ICrCEuL,gBAAgB,CAC3BtL,oB,wCCGEuL,GAAgB,CACpBC,IAAK,OACLC,Q,QAASA,EACTC,gBAAiBC,MAEbC,GAAmBC,aAAeN,GAAeO,IACjDC,GAAiBC,eACjBC,GAAmBzG,OAAO0G,sCAAwCC,KAClEC,GAAQC,aAAYT,GAAkBK,GAAiBK,aAAgBP,MACvEQ,GAAYC,aAAaJ,ICN/BL,GAAeU,IAAI7D,IAEnB8D,IAASC,OACP,cAAC,IAAMC,SAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,eAAD,CAAaG,UAAWA,GAAxB,SACE,cAAC,GAAD,UAINlG,SAASwG,eAAe,SAM1B5E,O","file":"static/js/main.39f166ca.chunk.js","sourcesContent":["export const GET_ACCESS_TOKEN='GET_ACCESS_TOKEN'\nexport const SET_ACCESS_TOKEN='SET_ACCESS_TOKEN'\nexport const GET_PLAYLIST='GET_PLAYLIST'\nexport const SET_PLAYLIST='SET_PLAYLIST'\nexport const GET_ONMOUSE_FLAG='GET_ONMOUSE_FLAG'\nexport const GET_LOCAL_SAVED_PLAYLIST='GET_LOCAL_SAVED_PLAYLIST'\nexport const SET_LOCAL_SAVED_PLAYLIST='SET_LOCAL_SAVED_PLAYLIST'\nexport const GET_DRAGGED_IDS='GET_DRAGGED_IDS'","import * as spotifyConstants from '../constants/spotify_constants';\n\nconst spotifyActions = (payload) => ({\n    getAccessToken: () => ({\n        type: spotifyConstants.GET_ACCESS_TOKEN,\n      }),\n      getFeaturedPlaylist: (payload) => ({\n        type: spotifyConstants.GET_PLAYLIST,\n        payload\n      }),\n      getOnMouseFlag: (payload) => ({\n        type: spotifyConstants.GET_ONMOUSE_FLAG,\n        payload\n      }),\n      getLocalSavedPlaylist: (payload) => ({\n        type: spotifyConstants.GET_LOCAL_SAVED_PLAYLIST,\n        payload\n      }),\n      getDraggedIds: (payload) => ({\n        type: spotifyConstants.GET_DRAGGED_IDS,\n        payload\n      }),\n})\nexport default spotifyActions();\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardMedia, IconButton, Typography, Grid } from \"@material-ui/core\";\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\nimport { useSelector } from \"react-redux\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  cover: {\n    width: 151,\n    backgroundPosition: 'center'\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  },\n  playIcon: {\n    height: 38,\n    width: 38\n  }\n}));\n\nexport default function MusicCards() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const localSavedPlaylist = useSelector((state) => state.spotifyReducer.localSavedPlaylist);\n  return (\n    <div>\n      <Grid container spacing={1}>\n        {localSavedPlaylist.map(music => {\n          return (\n            <Grid key={music.id} item lg={3} md={6} sm={12} xs={12}>\n              <Card className={classes.root}>\n                <div className={classes.details}>\n                  <CardContent className={classes.content}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                      {music.primary}\n                    </Typography>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                      {music.cover}\n                    </Typography>\n                  </CardContent>\n                  <div className={classes.controls}>\n                    <IconButton aria-label=\"previous\">\n                      {theme.direction === \"rtl\" ? (\n                        <SkipNextIcon />\n                      ) : (\n                          <SkipPreviousIcon />\n                        )}\n                    </IconButton>\n                    <IconButton aria-label=\"play/pause\">\n                      <PlayArrowIcon className={classes.playIcon} />\n                    </IconButton>\n                    <IconButton aria-label=\"next\">\n                      {theme.direction === \"rtl\" ? (\n                        <SkipPreviousIcon />\n                      ) : (\n                          <SkipNextIcon />\n                        )}\n                    </IconButton>\n                  </div>\n                </div>\n                <CardMedia\n                  className={classes.cover}\n                  style={{ backgroundImage: `url(${music.img})` }}\n                  src={music.img}\n                  title=\"Live from space album cover\"\n                />\n              </Card>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { List, ListItem, ListItemText, ListItemIcon, IconButton, ListItemSecondaryAction, Avatar, Tooltip, Zoom } from \"@material-ui/core\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport FeaturedPlayListOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport spotifyActions from '../actions/spotify_actions'\n\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n\n  ...(isDragging && {\n    background: \"#000000\",\n  })\n});\n\nconst getListStyle = (isDraggingOver) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nexport default function PlayList() {\n  const dispatch = useDispatch();\n  const onMouseFlag = useSelector((state) => state.spotifyReducer.onMouseFlag);\n  const localSavedPlaylist = useSelector((state) => state.spotifyReducer.localSavedPlaylist);\n  const featuredPlaylist = useSelector((state) => state.spotifyReducer.featuredPlaylist);\n  const getDraggedIDs = useSelector((state) => state.spotifyReducer.getDraggedIDs);\n\n  const onDragEnd = (result) => {\n    let index = result.source.index;\n    let localPlaylist = [...localSavedPlaylist], draggableId = [...getDraggedIDs];\n    if (onMouseFlag) {\n      localPlaylist.push(featuredPlaylist[index]);\n      draggableId.push(result.draggableId)\n      dispatch(spotifyActions.getLocalSavedPlaylist(localPlaylist));\n      dispatch(spotifyActions.getDraggedIds(draggableId));\n    }\n  }\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <RootRef rootRef={provided.innerRef}>\n              <List style={getListStyle(snapshot.isDraggingOver)}>\n                {featuredPlaylist.map((item, index) => (\n                  <Draggable\n                    key={item.id}\n                    draggableId={item.id}\n                    isDragDisabled={getDraggedIDs.includes(item.id)}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <Tooltip title={getDraggedIDs.includes(item.id) ? 'Already added to playlist' : 'Drag right to add it to your playlist'} TransitionComponent={Zoom} placement='top' arrow>\n                        <div>\n                          <ListItem className=\"playlist_items\"\n                            ContainerComponent=\"li\"\n                            ContainerProps={{ ref: provided.innerRef }}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style\n                            )}\n                          >\n                            <ListItemIcon>\n                              <Avatar alt=\"Remy Sharp\" src={item.img} />\n                            </ListItemIcon>\n                            <ListItemText\n                              primary={item.primary}\n                              secondary={item.secondary}\n                            />\n                            <ListItemSecondaryAction>\n                              <IconButton>\n                                <FeaturedPlayListOutlinedIcon />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        </div>\n                      </Tooltip>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </List>\n            </RootRef>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n    </div>\n  );\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AppBar, CssBaseline, Divider, Drawer, Hidden, List, Toolbar, Typography, Button, Box, ListSubheader } from '@material-ui/core';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport spotifyActions from '../actions/spotify_actions'\nimport { useDispatch } from \"react-redux\";\nimport MusicCards from '../presentational-components/music_cards'\nimport PlayList from '../presentational-components/playlist'\nimport '../styles/styles.css'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        height: '100vh'\n    },\n}));\n\nfunction ResponsiveDrawer(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const dispatch = useDispatch();\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} id=\"side_drawer\">\n                <Typography variant=\"h6\" noWrap className=\"spotify_typography\">\n                    <Box display=\"flex\" p={1}>\n                        <Box p={1} className=\"icon_box\">\n                            <img src=\"https://img.icons8.com/ios/50/26e07f/spotify.png\" />\n                        </Box>\n                        <Box p={1} flexGrow={1} className=\"name_box\">\n                            Spotify\n                        </Box>\n                    </Box>\n                </Typography>\n            </div>\n            <Divider />\n            <List\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                        FEATURED PLAYLIST\n                    </ListSubheader>\n                }\n            />\n            <PlayList />\n        </div>\n    );\n    const onDragEnd = () => {\n\n    }\n    const onMouseEnter = () => {\n        dispatch(spotifyActions.getOnMouseFlag(true))\n    }\n    const onMouseLeave = () => {\n        dispatch(spotifyActions.getOnMouseFlag(false))\n    }\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar} color='secondary'>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            My Playlist\n                    </Typography>\n                        <div>\n                            <Button\n                                variant=\"outlined\"\n                                className=\"button_circle\"\n                                size=\"medium\"\n                                startIcon={<AccountCircleIcon />}\n                            >\n                                Adil\n                        </Button>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={container}\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true,\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main id=\"content_area\" className={classes.content} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n                    <div className={classes.toolbar} />\n                    <MusicCards />\n                </main>\n            </DragDropContext>\n        </div>\n    );\n}\n\nResponsiveDrawer.propTypes = {\n    window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport spotifyActions from './actions/spotify_actions'\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport SpotifyContainer from './container-components/spotify_main_container'\n\nconst theme = createMuiTheme(\n  {\n    \"typography\": {\n      \"fontFamily\": [\n        'Microsoft Sans Serif'\n      ].join(','),\n    },\n    \"palette\": {\n      \"type\": \"dark\",\n      \"common\": {\n        \"black\": \"#000\",\n        \"white\": \"#fff\"\n      },\n      \"background\": {\n        \"paper\": \"#000000\",\n        \"default\": \"#0e0e0e\"\n      },\n      \"primary\": {\n        \"light\": \"#0e0e0e\",\n        \"main\": \"#000000\",\n        \"dark\": \"#000000\",\n        \"contrastText\": \"#fff\"\n      },\n      \"secondary\": {\n        \"light\": \"#ff4081\",\n        \"main\": \"#0e0e0e\",\n        \"dark\": \"#0e0e0e\",\n        \"contrastText\": \"#fff\"\n      },\n      \"error\": {\n        \"light\": \"#e57373\",\n        \"main\": \"#f44336\",\n        \"dark\": \"#d32f2f\",\n        \"contrastText\": \"#fff\"\n      },\n      \"text\": {\n        \"primary\": \"#fff\",\n        \"secondary\": \"#fff\",\n        \"disabled\": \"rgba(0, 0, 0, 0.38)\",\n        \"hint\": \"rgba(0, 0, 0, 0.38)\"\n      },\n      \"grid\": {\n        \"fontFamily\": [\n          'Microsoft Sans Serif'\n        ].join(','),\n      }\n    }\n  }\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(spotifyActions.getAccessToken());\n  }, [])\n  const accessToken = useSelector((state) => state.spotifyReducer.accessToken);\n  return (\n    <ThemeProvider theme={theme}>\n      <SpotifyContainer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const accessToken = (state) => state.spotifyReducer.accessToken;","import { put, takeLatest, all } from \"redux-saga/effects\";\nimport {GET_ACCESS_TOKEN,SET_ACCESS_TOKEN,GET_PLAYLIST,SET_PLAYLIST} from '../constants/spotify_constants'\nimport axios from \"axios\";\nimport qs from 'qs';\nimport * as selectors from '../selectors/selectors';\nimport {select} from 'redux-saga/effects';\n\n//to get access token of spotify api\nconst getAccessTokenActionrunOurAction = function* () {\n    let token=''\n    yield axios.post('https://accounts.spotify.com/api/token',\n    qs.stringify({\n      grant_type: 'client_credentials'\n    }), {\n      headers: { \n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Authorization\": \"Basic YWUzZDY3ODFhODMwNDI3MGI2NjQwNjdmZWQzOGU2OGQ6ODJiODkyNDZjNjA3NDM4OGI1OWQ3ZmNmOWMyMmU1Njc=\"\n      }\n    }).then(function(response) {\n        token=response.data.access_token\n    });\n    yield put({ type: SET_ACCESS_TOKEN, payload: token });\n    yield put({ type: GET_PLAYLIST, payload: token });\n  };\n  function* getAccessTokenActionDataWatcher() {\n    yield takeLatest(GET_ACCESS_TOKEN, getAccessTokenActionrunOurAction);\n  }\n\n  //to get featured playlist from spotify api\n  const getFeaturedPlaylistActionrunOurAction = function* (data) {\n    const accessToken = yield select(selectors.accessToken);\n      let playlist=[]\n    yield axios.get('https://api.spotify.com/v1/browse/featured-playlists?country=IN&locale=&limit=50', { headers: { Authorization: `Bearer ${accessToken}` } })\n    .then(response => {\n        response.data.playlists.items.map(list => {\n          let cover=list.description.substring(list.description.indexOf('Cover')+7,list.description.length).split(' ')\n            playlist.push({id:list.id,primary:list.name,img:list.images[0].url,cover:cover[0]+cover[1]})\n        })\n     })\n   \n    yield put({ type: SET_PLAYLIST, payload: playlist });\n  };\n  function* getFeaturedPlaylistActionDataWatcher(data) {\n    yield takeLatest(GET_PLAYLIST, getFeaturedPlaylistActionrunOurAction);\n  }\n\n  export default function* rootSaga() {\n    yield all([getAccessTokenActionDataWatcher(),getFeaturedPlaylistActionDataWatcher()]);\n  }","import { all } from \"redux-saga/effects\";\nimport spotifySaga from \"../sagas/spotify_saga\";\n\nfunction* rootSaga() {\n  yield all([spotifySaga()]);\n}\n\nexport default rootSaga;\n","import * as spotifyConstants from '../constants/spotify_constants';\n\nconst initialState = {\n    accessToken:'',\n    featuredPlaylist:[],\n    onMouseFlag:false,\n    localSavedPlaylist:[],\n    getDraggedIDs:[],\n    foo: {\n      bar: 'zoo',\n      nested: {\n        veryDeep: true,\n      },\n    },\n}\nconst spotifyReducer = (state = initialState, action) => {\n    const newState = Object.assign({}, state);\n    switch (action.type) {\n\n        case spotifyConstants.SET_ACCESS_TOKEN:\n        newState.accessToken = action.payload;\n      return newState\n\n      case spotifyConstants.SET_PLAYLIST:\n        newState.featuredPlaylist = action.payload;\n      return newState\n\n      case spotifyConstants.GET_ONMOUSE_FLAG:\n        newState.onMouseFlag = action.payload;\n      return newState\n\n      case spotifyConstants.GET_LOCAL_SAVED_PLAYLIST:\n        newState.localSavedPlaylist = action.payload;\n      return newState\n\n      case spotifyConstants.GET_DRAGGED_IDS:\n        newState.getDraggedIDs = action.payload;\n      return newState\n\n      default:\n      return state;\n    }\n}\nexport default spotifyReducer;","import { combineReducers } from \"redux\";\nimport spotifyReducer from '../reducers/spotify_reducer'\n\nexport default combineReducers({\n    spotifyReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"../reducers/root_reducer\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'form',\n  storage: storage,\n  stateReconciler: autoMergeLevel2, // see \"Merge Process\" section for details.    \n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nconst persistor = persistStore(store);\n\nexport { store, persistor, sagaMiddleware };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport rootSaga from './sagas/root_saga';\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor, store, sagaMiddleware } from './store/spotify_store';\n\nsagaMiddleware.run(rootSaga);;\n\nReactDOM.render(\n  <React.Fragment>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}